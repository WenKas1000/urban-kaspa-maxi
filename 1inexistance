const config = {
    type: Phaser.AUTO,
    width: 800,
    height: 600,
    parent: 'game-container',
    physics: {
        default: 'arcade',
        arcade: {
            debug: false
        }
    },
    scene: {
        preload: preload,
        create: create,
        update: update
    }
};

const game = new Phaser.Game(config);

let player, cursors, enemies;

function preload() {
    this.load.image('background', 'assets/background.png');
    this.load.image('player', 'assets/player.png'); // Your character
    this.load.image('enemy', 'assets/enemy.png');
    this.load.image('item', 'assets/item.png');
}

function create() {
    this.add.image(400, 300, 'background');
    
    player = this.physics.add.sprite(400, 300, 'player');
    cursors = this.input.keyboard.createCursorKeys();

    enemies = this.physics.add.group();
    this.physics.add.collider(player, enemies, hitEnemy, null, this);

    // Add items to collect
    const items = this.physics.add.group();
    for (let i = 0; i < 10; i++) {
        items.create(Phaser.Math.Between(50, 750), Phaser.Math.Between(50, 550), 'item');
    }

    this.physics.add.overlap(player, items, collectItem, null, this);
}

function update() {
    player.setVelocity(0);
    if (cursors.left.isDown) player.setVelocityX(-200);
    if (cursors.right.isDown) player.setVelocityX(200);
    if (cursors.up.isDown) player.setVelocityY(-200);
    if (cursors.down.isDown) player.setVelocityY(200);
}

function hitEnemy(player, enemy) {
    console.log('Hit!');
}

function collectItem(player, item) {
    item.destroy();
}
